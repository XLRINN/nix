#!/usr/bin/env bash
set -eu

# Color codes
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# Emojis
ERROR="❌"
SUCCESS="✅"
WARNING="⚠️"
INFO="ℹ️"

_print() {
  echo -e "$1"
}

_print "${BLUE}${INFO} NixOS Partition Fix Tool${NC}"
_print "${YELLOW}${WARNING} This will recreate partitions with correct labels${NC}"

# Check if we're in the installer environment
if [ ! -e /etc/NIXOS ]; then
  _print "${RED}${ERROR} Not running in the NixOS installer environment.${NC}"
  exit 1
fi

# Get disk information
_print "${BLUE}${INFO} Available disks:${NC}"
lsblk -f

# Ask for disk selection
_print "${YELLOW}Enter the disk to fix (e.g., sda, vda, nvme0n1): ${NC}"
read -r TARGET_DISK

if [ ! -b "/dev/$TARGET_DISK" ]; then
  _print "${RED}${ERROR} Disk /dev/$TARGET_DISK does not exist${NC}"
  exit 1
fi

_print "${YELLOW}${WARNING} This will DESTROY all data on /dev/$TARGET_DISK${NC}"
_print "${YELLOW}Are you sure you want to continue? (y/N): ${NC}"
read -r confirm

if [[ ! "$confirm" =~ ^[Yy]$ ]]; then
  _print "${BLUE}${INFO} Operation cancelled${NC}"
  exit 0
fi

# Unmount any existing mounts
_print "${BLUE}${INFO} Unmounting existing filesystems...${NC}"
umount /mnt/boot 2>/dev/null || true
umount /mnt 2>/dev/null || true

# Create a temporary disk configuration
TEMP_CONFIG=$(mktemp)
cat > "$TEMP_CONFIG" << 'EOF'
_: {
  disko.devices = {
    disk = {
      main = {
        type = "disk";
        device = "/dev/DISK_PLACEHOLDER";
        content = {
          type = "gpt";
          partitions = {
            grub = {
              size = "1M";
              type = "ef02";
            };
            root = {
              size = "100%";
              content = {
                type = "filesystem";
                format = "ext4";
                mountpoint = "/";
                mountOptions = [ "noatime" "nodiratime" ];
                extraFormatArgs = [ "-L" "disk-main-root" ];
              };
            };
          };
        };
      };
    };
  };
}
EOF

# Replace the disk placeholder
sed -i "s/DISK_PLACEHOLDER/$TARGET_DISK/g" "$TEMP_CONFIG"

_print "${BLUE}${INFO} Recreating partitions with correct labels...${NC}"

# Run disko to recreate partitions
if nix run --extra-experimental-features nix-command --extra-experimental-features flakes \
  github:nix-community/disko -- --mode zap_create_mount "$TEMP_CONFIG"; then
  _print "${GREEN}${SUCCESS} Partitions created successfully!${NC}"
  
  # Verify the labels
  _print "${BLUE}${INFO} Verifying partition labels...${NC}"
  if blkid | grep -q "disk-main-root"; then
    _print "${GREEN}${SUCCESS} Partition label 'disk-main-root' found${NC}"
  else
    _print "${YELLOW}${WARNING} Partition label not found, but continuing...${NC}"
  fi
  
  _print "${GREEN}${SUCCESS} Partition fix completed!${NC}"
  _print "${BLUE}${INFO} You can now proceed with the installation${NC}"
else
  _print "${RED}${ERROR} Failed to create partitions${NC}"
  _print "${YELLOW}${WARNING} Check the error messages above${NC}"
  exit 1
fi

# Clean up
rm -f "$TEMP_CONFIG" 