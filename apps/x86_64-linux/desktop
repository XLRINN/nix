#!/usr/bin/env bash
set -eu

# Color codes
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
CYAN='\033[0;36m'
NC='\033[0m' # No Color

#commit

check_installer() {
  if [ -e /etc/NIXOS ]; then
    echo -e "\e[1;32mRunning in the NixOS installer environment.\e[0m"
  else
    echo -e "\e[1;31mNot running in the NixOS installer environment.\e[0m"
    exit 1
  fi
}

cleanup() {
  rm -rf nixos-config-main.zip nixos-config-main nixos-config nix-*
}

download_config() {
  # Allow pinning a branch, tag, or commit SHA via NIX_REF; default to 'testing'
  NIX_REF=${NIX_REF:-testing}
  curl -LJ0 "https://github.com/xlrinn/nix/archive/${NIX_REF}.zip" -o nixos-config-main.zip
  unzip -q nixos-config-main.zip
  # Find extracted directory (nix-<refOrSha>) and enter
  SRC_DIR=$(find . -maxdepth 1 -type d -name "nix-*" | head -n1)
  if [ -z "$SRC_DIR" ] || [ ! -d "$SRC_DIR" ]; then
    echo -e "${RED}Error: Extracted directory not found after download.${NC}"
    exit 1
  fi
  cd "$SRC_DIR"
  echo -e "${GREEN}✓ Configuration downloaded and extracted${NC}"
}

run_apply() {
  ./apps/x86_64-linux/apply
  # Hardcoded username - no need to read from /tmp/username.txt
  export USERNAME="david"
  echo -e "${GREEN}✓ Configuration complete${NC}"
}

run_disko() {
  nix --experimental-features "nix-command flakes" run github:nix-community/disko -- --mode disko ./modules/nixos/disk-config.nix
  echo -e "${GREEN}✓ Disk formatted and mounted${NC}"
}

setup_files() {
  mkdir -p /mnt/etc/nixos
  cp -r * /mnt/etc/nixos
  cd /mnt/etc/nixos
  echo -e "${GREEN}✓ Files copied to system${NC}"

  # Ensure a clean ~/nix git clone for the first boot
  mkdir -p /mnt/home/david
  if [ -d "/mnt/home/david/nix" ]; then
    rm -rf /mnt/home/david/nix
  fi
  git clone --depth 1 --branch master https://github.com/xlrinn/nix.git /mnt/home/david/nix
  # Minimal identity passthrough (optional)
  if [ -f /tmp/git_name.txt ]; then git -C /mnt/home/david/nix config user.name "$(cat /tmp/git_name.txt)"; fi
  if [ -f /tmp/git_email.txt ]; then git -C /mnt/home/david/nix config user.email "$(cat /tmp/git_email.txt)"; fi
  # Enforce HTTPS-only origin
  git -C /mnt/home/david/nix remote set-url origin https://github.com/xlrinn/nix.git >/dev/null 2>&1 || true
  git -C /mnt/home/david/nix fetch --all --prune || true
  chown -R 1000:1000 /mnt/home/david/nix
  chmod -R 755 /mnt/home/david/nix
}

install_nixos() {
  ARCH=$(uname -m)

  case "$ARCH" in
    x86_64)
      FLAKE_TARGET="x86_64-linux"
      ;;
    aarch64)
      FLAKE_TARGET="aarch64-linux"
      ;;
    *)
      echo -e "${RED}Unsupported architecture: $ARCH${NC}"
      exit 1
      ;;
  esac

  nixos-install --flake .#$FLAKE_TARGET --option max-jobs 1 --no-write-lock-file
  chmod -R 775 /mnt/etc/nixos
  
  echo -e "${GREEN}✓ NixOS installed successfully${NC}"
}

prompt_reboot() {
  echo -e "\e[1;32mRebooting in 5 seconds...\e[0m"
  sleep 5
  reboot
}

cleanup
check_installer
download_config
run_apply
run_disko
setup_files
install_nixos
cleanup
prompt_reboot 