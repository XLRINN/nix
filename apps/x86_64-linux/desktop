#!/usr/bin/env bash
set -eu

# Color codes
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
CYAN='\033[0;36m'
NC='\033[0m' # No Color



check_installer() {
  if [ -e /etc/NIXOS ]; then
    echo -e "\e[1;32mRunning in the NixOS installer environment.\e[0m"
  else
    echo -e "\e[1;31mNot running in the NixOS installer environment.\e[0m"
    exit 1
  fi
}

cleanup() {
  rm -rf nixos-config-main.zip nixos-config-main nixos-config
}

download_config() {
  # Download the repository from the testing branch
  curl -LJ0 https://github.com/xlrinn/nix/archive/testing.zip -o nixos-config-main.zip
  unzip nixos-config-main.zip
  mv nix-testing nixos-config
  cd nixos-config
  echo -e "${GREEN}✓ Configuration downloaded and extracted${NC}"
}

run_apply() {
  ./apps/x86_64-linux/apply
  # Hardcoded username - no need to read from /tmp/username.txt
  export USERNAME="david"
  echo -e "${GREEN}✓ Configuration complete${NC}"
}

run_disko() {
  nix --experimental-features "nix-command flakes" run github:nix-community/disko -- --mode disko ./modules/nixos/disk-config.nix
  echo -e "${GREEN}✓ Disk formatted and mounted${NC}"
}

setup_files() {
  mkdir -p /mnt/etc/nixos
  cp -r * /mnt/etc/nixos
  cd /mnt/etc/nixos
  echo -e "${GREEN}✓ Files copied to system${NC}"
}

install_nixos() {
  ARCH=$(uname -m)

  case "$ARCH" in
    x86_64)
      FLAKE_TARGET="x86_64-linux"
      ;;
    aarch64)
      FLAKE_TARGET="aarch64-linux"
      ;;
    *)
      echo -e "${RED}Unsupported architecture: $ARCH${NC}"
      exit 1
      ;;
  esac

  nixos-install --flake .#$FLAKE_TARGET
  chmod -R 775 /mnt/etc/nixos
  
  # Copy config to david's home directory as a proper git repo (dustinlyons approach)
  mkdir -p /mnt/home/david/.local/share/src
  # Copy the original downloaded configuration (not the system copy) and rename to nixos-config
  cp -r ../nixos-config /mnt/home/david/.local/share/src/nixos-config
  
  # Set up git remote for david's config (after first boot when bash is available)
  # Create a setup script that will run on first boot
  cat > /mnt/home/david/setup-git.sh << 'EOF'
#!/usr/bin/env bash
cd /home/david/.local/share/src/nixos-config
git init
git remote add origin https://github.com/xlrinn/nix.git
git add .
git commit -m "Initial installation configuration"
git fetch origin
git branch --set-upstream-to=origin/testing testing 2>/dev/null || echo "Branch setup will be completed on first pull"
chown -R david:users /home/david/.local/share/src/nixos-config
rm /home/david/setup-git.sh
EOF
  
  chmod +x /mnt/home/david/setup-git.sh
  
  # Set basic ownership (will be corrected on first boot)
  chown -R 1000:1000 /mnt/home/david/ 2>/dev/null || echo "Note: Ownership will be set correctly after first boot"
  
  echo -e "${GREEN}✓ NixOS installed successfully${NC}"
  echo -e "${GREEN}✓ Configuration copied to /home/david/.local/share/src/nixos-config${NC}"
  echo -e "${GREEN}✓ Git setup script created (will run on first boot)${NC}"
}

prompt_reboot() {
  echo -e "\e[1;32mRebooting in 5 seconds...\e[0m"
  sleep 5
  reboot
}

cleanup
check_installer
download_config
run_apply
run_disko
setup_files
install_nixos
cleanup
prompt_reboot 