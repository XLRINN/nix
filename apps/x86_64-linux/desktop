#!/usr/bin/env bash
set -exu

# Color codes
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
CYAN='\033[0;36m'
NC='\033[0m' # No Color

# Animation frames
SPINNER=("⠋" "⠙" "⠹" "⠸" "⠼" "⠴" "⠦" "⠧" "⠇" "⠏")
DOTS=("" "." ".." "...")

# Animation function
animate() {
  local message="$1"
  local frames=("${@:2}")
  local i=0
  
  while true; do
    printf "\r${CYAN}${frames[$i]}${NC} $message"
    sleep 0.1
    i=$(( (i + 1) % ${#frames[@]} ))
  done
}

# Start animation in background
start_animation() {
  local message="$1"
  animate "$message" "${SPINNER[@]}" &
  ANIMATION_PID=$!
}

# Stop animation
stop_animation() {
  if [[ -n "$ANIMATION_PID" ]]; then
    kill $ANIMATION_PID 2>/dev/null
    wait $ANIMATION_PID 2>/dev/null
    printf "\r\033[K" # Clear line
  fi
}

check_installer() {
  if [ -e /etc/NIXOS ]; then
    echo -e "\e[1;32mRunning in the NixOS installer environment.\e[0m"
  else
    echo -e "\e[1;31mNot running in the NixOS installer environment.\e[0m"
    exit 1
  fi
}

cleanup() {
  rm -rf nixos-config-main.zip nixos-config-main nixos-config
}

download_config() {
  curl -LJ0 https://github.com/xlrinn/nix/archive/desktop.zip -o nixos-config-main.zip
  unzip nixos-config-main.zip
  mv nix-desktop nixos-config
  cd nixos-config
}

run_apply() {
  start_animation "Configuring system..."
  ./apps/x86_64-linux/apply
  stop_animation
  if [ ! -f /tmp/username.txt ]; then
    echo -e "\e[1;31mError: /tmp/username.txt does not exist.\e[0m"
    exit 1
  fi
  export USERNAME=$(cat /tmp/username.txt)
  echo -e "${GREEN}✓ Configuration complete${NC}"
}

run_disko() {
  start_animation "Formatting disk..."
  nix run --extra-experimental-features nix-command --extra-experimental-features flakes \
    --option cores 0 --option max-jobs auto \
    github:nix-community/disko -- --mode zap_create_mount ./modules/nixos/disk-config.nix
  stop_animation
  echo -e "${GREEN}✓ Disk formatted and mounted${NC}"
}

setup_files() {
  start_animation "Copying files..."
  mkdir -p /mnt/etc/nixos
  cp -r * /mnt/etc/nixos
  cd /mnt/etc/nixos
  stop_animation
  echo -e "${GREEN}✓ Files copied to system${NC}"
}

install_nixos() {
  ARCH=$(uname -m)

  case "$ARCH" in
    x86_64)
      FLAKE_TARGET="x86_64-linux"
      ;;
    aarch64)
      FLAKE_TARGET="aarch64-linux"
      ;;
    *)
      echo -e "${RED}Unsupported architecture: $ARCH${NC}"
      exit 1
      ;;
  esac

  start_animation "Installing NixOS..."
  nixos-install --flake .#$FLAKE_TARGET --option download-buffer-size 33554432 --option cores 0 --option max-jobs auto
  stop_animation
  chmod -R 775 /mnt/etc/nixos
  echo -e "${GREEN}✓ NixOS installed successfully${NC}"
}

prompt_reboot() {
  read -p "Do you want to reboot now? (y/yes) " choice
  case "$choice" in
  y|Y|yes|YES ) echo -e "\e[1;32mRebooting...\e[0m" && reboot;;
  * ) echo -e "\e[1;33mReboot skipped.\e[0m";;
  esac
}

cleanup
check_installer
download_config
run_apply
run_disko
setup_files
install_nixos
cleanup
prompt_reboot 