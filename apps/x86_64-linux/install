#!/usr/bin/env bash
set -exu

# Color codes
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
CYAN='\033[0;36m'
NC='\033[0m' # No Color

check_installer() {
  if [ -e /etc/NIXOS ]; then
    echo -e "\e[1;32mRunning in the NixOS installer environment.\e[0m"
  else
    echo -e "\e[1;31mNot running in the NixOS installer environment.\e[0m"
    exit 1
  fi
}

cleanup() {
  rm -rf nixos-config-main.zip nixos-config-main nixos-config
}

download_config() {
  curl -LJ0 https://github.com/xlrinn/nix/archive/desktop.zip -o nixos-config-main.zip
  unzip nixos-config-main.zip
  mv nix-desktop nixos-config
  cd nixos-config
}

run_apply() {
  ./apps/x86_64-linux/apply
  if [ ! -f /tmp/username.txt ]; then
    echo -e "\e[1;31mError: /tmp/username.txt does not exist.\e[0m"
    exit 1
  fi
  export USERNAME=$(cat /tmp/username.txt)
}

run_disko() {
  nix run --extra-experimental-features nix-command --extra-experimental-features flakes \
    --option cores 0 --option max-jobs auto \
    github:nix-community/disko -- --mode zap_create_mount ./modules/nixos/disk-config.nix
}

setup_files() {
  mkdir -p /mnt/etc/nixos
  cp -r * /mnt/etc/nixos
  cd /mnt/etc/nixos
  
  # Clone a fresh copy of the nix repository to the user's home directory
  mkdir -p /mnt/home/david
  cd /mnt/home/david
  git clone https://github.com/xlrinn/nix.git
  chown -R 1000:1000 /mnt/home/david/nix
}

install_nixos() {
  ARCH=$(uname -m)

  case "$ARCH" in
    x86_64)
      FLAKE_TARGET="x86_64-linux"
      ;;
    aarch64)
      FLAKE_TARGET="aarch64-linux"
      ;;
    *)
      echo -e "${RED}Unsupported architecture: $ARCH${NC}"
      exit 1
      ;;
  esac

  nixos-install --flake .#$FLAKE_TARGET --option download-buffer-size=536870912 --option cores=0 --option max-jobs=auto 2>&1 | grep -v "security hole" | grep -v "⚠️"
  chmod -R 775 /mnt/etc/nixos
  
  # Set root password to match user password (both set to "password")
  echo "Setting root password..."
  echo "root:password" | chroot /mnt /nix/var/nix/profiles/system/sw/bin/chpasswd
  
  # Force home-manager to apply configurations immediately
  echo "Applying home-manager configurations..."
  chroot /mnt /nix/var/nix/profiles/system/sw/bin/bash -c "
    cd /home/david/nix
    nixos-rebuild switch --flake .#x86_64-linux
  "
}

auto_reboot() {
  echo -e "\e[1;32mInstallation complete! Rebooting in 5 seconds...\e[0m"
  sleep 5
  reboot
}

cleanup
check_installer
download_config
run_apply
run_disko
setup_files
install_nixos
cleanup
auto_reboot 